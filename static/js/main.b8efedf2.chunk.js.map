{"version":3,"sources":["API/posts.js","API/users.js","API/comments.js","components/CommentsList.js","components/Accordion.js","components/User.js","components/Cards.js","components/PostList.js","App.js","index.js"],"names":["URL","CommentsList","_this$props$comment","this","props","comment","name","email","body","react_default","a","createElement","className","href","concat","Component","DropDown","state","activeIndex","handleClick","e","titleProps","index","newIndex","_this","setState","comments","Segment","inverted","Accordion","Title","active","onClick","Icon","Content","map","components_CommentsList","key","id","User","_this$props$user","user","address","city","Cards","_this$props$post","post","title","wide","Math","round","random","height","src","alt","components_User","components_Accordion","PostList","filter","addFilter","event","target","value","postsInfo","filteredInfo","Object","toConsumableArray","includes","classname","Input","type","placeholder","icon","onChange","components_Cards","App","postList","isLoading","hasError","loadData","Promise","all","fetch","then","posts","json","users","_ref","_ref2","slicedToArray","_objectSpread","find","userId","postId","catch","_this$state","Dimmer","Loader","indeterminate","Button","negative","components_PostList","content","React","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b8efedf2.chunk.js","sourcesContent":["const URL = 'https://jsonplaceholder.typicode.com/posts';\n\nexport default function getPosts() {\n  return fetch(URL)\n    .then(posts => posts.json());\n}\n","const URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport default function getUsers() {\n  return fetch(URL)\n    .then(users => users.json());\n}\n","const URL = 'https://jsonplaceholder.typicode.com/comments';\n\nexport default function getComments() {\n  return fetch(URL)\n    .then(posts => posts.json());\n}\n","import React, { Component } from 'react';\n\nclass CommentsList extends Component {\n  render() {\n    const {\n      comment: {\n        name, email, body,\n      },\n    } = this.props;\n\n    return (\n      <div>\n        <h4 className=\"comment__header\">{name}</h4>\n        <a href={`mailto:${email}`} className=\"mail__link\">{email}</a>\n        <p className=\"comment__body\">{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default CommentsList;\n","import React, { Component } from 'react';\nimport { Accordion, Icon, Segment } from 'semantic-ui-react';\nimport CommentsList from './CommentsList';\n\nclass DropDown extends Component {\n  state = {\n    activeIndex: -1,\n  };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    const { comments } = this.props;\n    const { activeIndex } = this.state;\n\n    return (\n      <Segment inverted>\n        <Accordion inverted>\n          <Accordion.Title\n            active={activeIndex === 0}\n            index={0}\n            onClick={this.handleClick}\n          >\n            <Icon name=\"dropdown\" />\n            COMMENTS\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0}>\n            {comments.map(comment => (<CommentsList comment={comment} key={comment.id} />))}\n          </Accordion.Content>\n        </Accordion>\n      </Segment>\n    );\n  }\n}\n\nexport default DropDown;\n","import React, { Component } from 'react';\n\nclass User extends Component {\n  render() {\n    const {\n      user: {\n        email, name, address,\n      },\n    } = this.props;\n\n    return (\n      <div className=\"meta\">\n        <span>{ name }</span>\n        <br />\n        <a href={`mailto:${email}`}>{email}</a>\n        <br />\n        <div>\n          <span>\n            City:\n            {address.city}\n          </span>\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import React, { Component } from 'react';\nimport DropDown from './Accordion';\nimport User from './User';\n\nclass Cards extends Component {\n  render() {\n    const {\n      post: {\n        user, title, body, comments,\n      },\n    } = this.props;\n    const wide = Math.round(Math.random() * (410 - 390) + 430);\n    const height = Math.round(Math.random() * (410 - 390) + 430);\n\n    return (\n      <div className=\"ui grid centered card__box\">\n        <div className=\"ui card eight wide column\">\n          <div className=\"image\">\n            <img src={`https://source.unsplash.com/${wide}x${height}/?man,girl,blog,posts,notes,fashion`} alt=\"post\" />\n          </div>\n          <div className=\"content\">\n            <div className=\"header\">{title}</div>\n            <User user={user} />\n            <div className=\"description\">\n              <p>{body}</p>\n            </div>\n          </div>\n          <DropDown comments={comments} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cards;\n","import React, { Component } from 'react';\nimport { Input, Segment } from 'semantic-ui-react';\n\nimport Cards from './Cards';\n\nclass PostList extends Component {\n  state = {\n    filter: '',\n  };\n\n  addFilter = (event) => {\n    const filter = event.target.value;\n\n    this.setState({\n      filter,\n    });\n  };\n\n  render() {\n    const { postsInfo } = this.props;\n    const { filter } = this.state;\n    const filteredInfo = [...postsInfo].filter(post => post.title.includes(filter) || post.body.includes(filter) || post.user.name.includes(filter) || post.user.email.includes(filter));\n\n    return (\n      <Segment inverted classname=\"box\">\n        <Input\n          inverted\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Find alike ...\"\n          icon=\"search\"\n          onChange={this.addFilter}\n        />\n\n        {filteredInfo.map(post => (<Cards post={post} key={post.id} />))}\n      </Segment>\n    );\n  }\n}\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\n\nimport {\n  Dimmer, Loader,  Segment, Button,\n} from 'semantic-ui-react';\n\nimport getPosts from './API/posts';\nimport getUsers from './API/users';\nimport getComments from './API/comments';\nimport PostList from './components/PostList';\n\nclass App extends React.Component {\n  state = {\n    postList: null,\n    isLoading: false,\n    hasError: false,\n  };\n\n  loadData = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    Promise.all([getPosts(), getUsers(), getComments()])\n      .then(([posts, users, comments]) => {\n        this.setState({\n          postList: posts.map(post => ({\n            ...post,\n            user: users.find(user => user.id === post.userId),\n            comments: comments.filter(comment => comment.postId === post.id),\n          })),\n          isLoading: false,\n          hasError: false,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          isLoading: false,\n          hasError: true,\n        });\n      });\n  };\n\n  render() {\n    const {\n      postList,\n      isLoading,\n      hasError,\n    } = this.state;\n\n    if (isLoading) {\n      return (\n        <Segment id=\"loader\">\n          <Dimmer active>\n            <Loader indeterminate>Preparing Posts</Loader>\n          </Dimmer>\n        </Segment>\n      );\n    }\n\n    if (!isLoading && hasError) {\n      return (\n        <div className=\"load__fail\">\n          <h2> IF YOU SEE THIS, SOMETHING GOT WRONG, TRY TO RELOAD</h2>\n          <Button className=\"before__load-button\" onClick={this.loadData} negative>RELOAD</Button>\n        </div>\n      );\n    }\n\n    if (!postList) {\n      return (\n        <div className=\"before__load\">\n          <h2 className=\"before__load-text\">WELCOME, YOU DON'T HAVE DATA YET</h2>\n          <Button className=\"before__load-button\" onClick={this.loadData} icon=\"play\" content=\"Load Data\" />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <PostList postsInfo={postList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}